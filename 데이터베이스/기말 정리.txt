5.

엔티티 - 객체
관계 - 엔티티 간의 연관
프로세스 - 활동
무결성 제약 조건 - 데이터의 정확성, 비즈니스 규칙

모든 측면을 나타냄, 중복을 최소화, 효율적인 접근, 무결성 제공, 이해하기 쉬움

요구 사항 분석 단계
요구 사항 수집과 분석

설계 단계
개념적 설계 - ER or 객체 모델링, 개념적 스키마, ER 다이어그램, 개념적 스키마
DBMS 선정
논리적 설계 - 개념적 설계를 스키마로 사상, 논리적 스키마
스키마 정제 - 중복 제거, 스키마 정규화
물리적 설계 - 인덱스 정의
보안 설계 - 접근 제한

구현 단계
데이터베이스 구축, 튜닝

트랜잭션 설계
검색, 갱신, 혼합

엔티티 타입, 엔티티 집합, 엔티티 - 직사각형
강한 엔티티 타입
약한 엔티티 타입 - 이중선, 기본 키 애트리뷰트가 없음, 부분 키로 대체
소유 엔티티 타입이 키 애트리뷰트 제공

애트리뷰트 - 타원
단순 애트리뷰트 - 실선, 더 이상 나눌 수 없음
복합 애트리뷰트 - 두개 이상의 애트리뷰트
단일 값 애트리뷰트 - 하나의 값만 가지는 애트리뷰트
다치 애트리뷰트 - 이중선, 두개 이상의 값
저장된 애트리뷰트 - 독립적
유도된 애트리뷰트 - 점선, 다른 애트리뷰트로 얻어짐

관계 - 다이아몬드, 설명을 위한 애트리뷰트를 가질 수 있음, 키 애트리뷰트는 없음, 소유랑 약한은 이중선

차수 - 관계로 연결된 엔티티 타입의 개수
카디날리티 (비율) - 한 엔티티 (그냥 엔티티)가 참여할 수 있는 관계의 수

역할 - 관계에서 엔티티가 어떤 역할인지 설명

참여
부분 참여
전체 참여 - 이중선, 약한 엔티티 타입은 항상 전체 참여

새발 - 가까운 데부터 max, min, 전체 참여면 반대쪽 min 1, 아니면 0

6.

자기 디스크 - 트랙, 섹터, 트랙에 따라 저장, 여러 면의 같은 트랙 - 실린더

클러스터링 - 검색될 가능성이 높은 레코드들을 디스크 상에서 물리적으로 가까운 곳에 모음

화일
히프 - Unsorted List, 모든 레코드 참조, 순서 중요하지 않을 때, 삽입 좋음, 나머지 나쁨
순차 - Sorted List, 키 값의 순서대로, 탐색 좋음, 나머지 나쁨
인덱스 순차
단일 단계 - 인덱스 1층, 여러 개
기본 (희소) - 탐색 키 = 기본 키
클러스터링 - 클러스터마다 인덱스가 있음, 범위 질의 좋음
보조 (밀집) - 데이터 화일 정렬 x
희소 vs 밀집 - 데이터 블록마다 엔트리 vs 레코드마다 엔트리, 보통 희소가 좋은데, 탐색 키 질의는 밀집이 더 빠름
다단계 - 인덱스의 인덱스, 맨 위 마스터 인덱스라 부르고 한 블록
장점 - 검색 속도 향상, 소수의 레코드 속도 향상
단점 - 공간 추가 필요, 삽입, 삭제, 수정, 연산 속도 저하
직접

7.

갱신 이상 - 수정, 삽입, 삭제
릴레이션 분해로 해결

정규형
함수적 종속성 - A가 B의 결정자면 B가 A에 함수적으로 종속함
완전 함수적 종속성 - 기본 키의 모든 애트리뷰트가 결정자면 완전 함수적 종속, 기본 키가 복합 키가 아니면 무조건 완전
부분 합수적 종속성 - 기본 키의 일부 애트리뷰트가 결정자면 부분 함수적 종속

무손실 분해 - 분해 조인하면 원래대로

제 1 정규형 - 모든 애트리뷰트가 원자값만 가짐, 리스트 형태로 나타난 값을 반복 그룹이라고 하고 얘를 쪼개면 됨
제 2 정규형 - 부분 종속 x, 릴레이션 분해로 해결
제 3 정규형 - 이행적 종속 x
BCNF - 모든 결정자가 후보 키

역정규화 - 정규형이 커질수록 릴레이션 분해가 많이 되므로 어떤 데이터를 찾을 때 조인을 많이 하게 됨

8.

뷰
장점 - 간단한 표현, 무결성, 독립성, 보안

9.

트랜잭션
동시성 제어 - 트랜잭션 동시 수행
회복

트랜잭션의 특성
원자성 - 완전히 수행되거나 수행되지 않음
일관성 - 트랜잭션이 수행되지 전이나 후에는 일관적인 상태
고립성 - 트랜잭션이 수행되는 동안에는 다른 트랜잭션이 접근 x
지속성 - 완료된 트랜잭션이 갱신한 내용은 시스템이 고장나도 손실되지 않음

직렬 - 순서대로
비직렬 - 동시에
직렬 가능 - 결과가 같음

갱신 손실 - 갱신한 내용을 덮어씀
오손 데이터 읽기 - 완료되지 않은 트랜잭션이 갱신한 데이터를 읽음
반복할 수 없는 읽기 - 동일한 데이터를 두 번 읽는데 다름

로킹
독점 로크 - 갱신 목적
공유 로크 - 읽기 목적

보통 한꺼번에 해제 - 오손 데이터 읽기 발생 가능
데드록 - 서로 로크 요청

팬텀 문제 - 로크를 썼는데도 문제 발생

데이터베이스 버퍼보다 로그 버퍼를 먼저 기록

READ UNCOMMITED - 공유 로크 X, 오손, 반복, 팬텀
READ COMMITED - 공유 로크 O, 읽기 끝나면 해제, 반복, 팬텀
REPEATABLE READ - 공유 로크 O, 트랜잭션 끝나면 해제, 팬텀
SERIALIZABLE - 인덱스까지 공유 로크 O, 트랜잭션 끝나면 해제

10.

임의 보안 기법 - 행동에 대한 권한을 부여, 취소
강제 보안 기법 - 보안 등급, 정책